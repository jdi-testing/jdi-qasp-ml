name: jdi-qasp-ml-dev

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-size: "256m"

services:
  selenoid:
    container_name: "jdi-qasp-ml-dev-selenoid"
    image: "aerokube/selenoid:latest"
    restart: unless-stopped
    volumes:
      - ".:/etc/selenoid"
      - "./docker-data/selenoid-output:/output"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./docker-data/selenoid-output:/opt/selenoid/video"
    environment:
      - "OVERRIDE_VIDEO_OUTPUT_DIR=$PWD/target"
    command:
      - "-conf"
      - "/etc/selenoid/browsers.json"
      - "-video-output-dir"
      - "/opt/selenoid/video"
      - "-container-network"
      - "${JDI_DEFAULT_NETWORK_NAME:-jdi-qasp-ml-dev-default}"
      - "-limit"
      - "${SELENOID_PARALLEL_SESSIONS_COUNT:?set it to the number of parallel running threads supported by your processor (-2 optionally)}"
    networks:
      default:
        aliases:
          - jdi-qasp-ml-selenoid

  api:
    container_name: jdi-qasp-ml-dev-api
    image: "ghcr.io/jdi-testing/jdi-qasp-ml:latest"
    pull_policy: always
    command: uvicorn app.main:api --host 0.0.0.0 --port 80
    depends_on:
      - selenoid
      - celery
      - mongodb
    restart: unless-stopped
    ports:
      - "5000:80"
    env_file:
      - .env
    environment:
      - SELENOID_PARALLEL_SESSIONS_COUNT=$SELENOID_PARALLEL_SESSIONS_COUNT
    <<: *logging

  celery:
    container_name: jdi-qasp-ml-dev-celery
    image: "ghcr.io/jdi-testing/jdi-qasp-ml:latest"
    pull_policy: always
    command: celery -A app.celery_app:celery_app worker -l info
    restart: unless-stopped
    depends_on:
      - redis
    env_file:
      - .env
    <<: *logging

  redis:
    container_name: jdi-qasp-ml-dev-redis
    image: "redis:alpine"
    restart: unless-stopped
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}" --maxmemory 2048mb --maxmemory-policy allkeys-lru
    env_file:
      - .env
    <<: *logging

  mongodb:
    container_name: jdi-qasp-ml-dev-mongodb
    image: mongo:5.0
    restart: unless-stopped
    volumes:
      - ./docker-data/mongodb:/data/db
    env_file:
      - .env
    <<: *logging

networks:
  default:
    name: ${JDI_DEFAULT_NETWORK_NAME:-jdi-qasp-ml-dev-default}
